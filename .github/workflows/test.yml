name: Test ComfyUI-OmniSVG

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcairo2 libcairo2-dev pkg-config
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test imports and basic functionality
      run: |
        python -c "import nodes; print('Nodes import successful')"
        python -c "from nodes import OmniSVGModelLoader, SVGToImage, SVGSaver; print('Node classes import successful')"
    
    - name: Test SVG processing (without model)
      run: |
        python -c "
        from nodes import SVGToImage, SVGSaver
        import tempfile
        import os
        
        # Test SVG to Image
        svg_node = SVGToImage()
        test_svg = '<svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"red\" /></svg>'
        result = svg_node.svg_to_image(test_svg, 256, 256)
        print(f'SVG to Image test: {result[0].shape}')
        
        # Test SVG Saver
        saver = SVGSaver()
        with tempfile.TemporaryDirectory() as tmpdir:
            result = saver.save_svg(test_svg, 'test', tmpdir)
            assert os.path.exists(result[0]), 'SVG file not created'
            print('SVG Saver test: passed')
        
        print('All tests passed!')
        "

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8
    
    - name: Check code formatting with black
      run: black --check --diff .
    
    - name: Check import sorting with isort
      run: isort --check-only --diff .
    
    - name: Lint with flake8
      run: flake8 . --max-line-length=127
